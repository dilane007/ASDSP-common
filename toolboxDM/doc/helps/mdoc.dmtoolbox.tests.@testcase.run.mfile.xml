<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='../mfile_doc.xsl'?>
<MFileInfo mname='run' filename='run.m'>
  <Context is_root='true'>
    <Self path='mdoc.dmtoolbox.tests.@testcase.run.mfile.xml'/>
    <Prev path='mdoc.dmtoolbox.tests.@testcase.nfuns.mfile.xml'/>
    <Next path='mdoc.dmtoolbox.tests.@testcase.testcase.mfile.xml'/>
    <Root path='mdoc.dmtoolbox.mdir.xml'/>
    <Parent path='mdoc.dmtoolbox.tests.@testcase.mdir.xml'/>
  </Context>
  <MDoc mtype='function'>
    <MFuncDecl funcname='run'>
      <Inputs>
        <Var name='tcase'/>
        <Var name='logger'/>
      </Inputs>
      <Outputs>
        <Var name='info'/>
        <Var name='logger'/>
      </Outputs>
    </MFuncDecl>
    <MHeadLine leadword='RUN'>Runs the test case</MHeadLine>
    <MSection name='syntax'>
      <MList listtype='unordered'>
        <MListItem>
          <MParagraph>info = run(tcase)</MParagraph>
        </MListItem>
        <MListItem>
          <MParagraph>info = run(tcase, logger)</MParagraph>
        </MListItem>
      </MList>
    </MSection>
    <MSection name='arguments'>
      <MTermList listtype='unordered'>
        <MTermEntry term='tcase'>
          <MParagraph>the test case to run</MParagraph>
        </MTermEntry>
        <MTermEntry term='logger'>
          <MParagraph>the logger to handle testing events (if not specified, it uses the testlog() as default)</MParagraph>
        </MTermEntry>
        <MTermEntry term='info'>
          <MParagraph>the struct of testing information It contains three fields:</MParagraph>
          <MTermList listtype='unordered'>
            <MTermEntry term='tag'>
              <MParagraph>&apos;case_info&apos;</MParagraph>
            </MTermEntry>
            <MTermEntry term='case_name'>
              <MParagraph>the name of the test case</MParagraph>
            </MTermEntry>
            <MTermEntry term='tinfo'>
              <MParagraph>the struct array recording the test information. It contains all monitored records. There are 6 fields:</MParagraph>
              <MTermList listtype='unordered'>
                <MTermEntry term='type'>
                  <MParagraph>&apos;pass&apos;|&apos;fail&apos;|&apos;fatal&apos;|&apos;exc&apos;</MParagraph>
                </MTermEntry>
                <MTermEntry term='file'>
                  <MParagraph>the m-file path of the test function</MParagraph>
                </MTermEntry>
                <MTermEntry term='fname'>
                  <MParagraph>the function name</MParagraph>
                </MTermEntry>
                <MTermEntry term='line'>
                  <MParagraph>the line number</MParagraph>
                </MTermEntry>
                <MTermEntry term='errmsg'>
                  <MParagraph>error message</MParagraph>
                </MTermEntry>
                <MTermEntry term='errid'>
                  <MParagraph>error identifier</MParagraph>
                </MTermEntry>
              </MTermList>
              <MParagraph>Please refer to the help of testmon class for more information.</MParagraph>
            </MTermEntry>
            <MTermEntry term='tstats'>
              <MParagraph>a struct of some statistics</MParagraph>
              <MTermList listtype='unordered'>
                <MTermEntry term='records'>
                  <MParagraph>a 1 x 4 vector of the numbers of different types of records</MParagraph>
                </MTermEntry>
                <MTermEntry term='cases'>
                  <MParagraph>a 1 x 2 vector of the number of passed cases and that of the failed cases</MParagraph>
                </MTermEntry>
              </MTermList>
            </MTermEntry>
          </MTermList>
        </MTermEntry>
      </MTermList>
    </MSection>
    <MSection name='description'>
      <MList listtype='unordered'>
        <MListItem>
          <MParagraph>info = run(tcase) runs the testing functions in the case and monitors the running. The running information will be output.</MParagraph>
          <MParagraph>The procedure of running a test case is described as follows: For each testing function</MParagraph>
          <MList listtype='ordered'>
            <MListItem>
              <MParagraph>if startfun is specified, run the startfun and use its outputs as the test function&apos;s input</MParagraph>
            </MListItem>
            <MListItem>
              <MParagraph>run the testing function (under monitoring)</MParagraph>
            </MListItem>
            <MListItem>
              <MParagraph>the testing function may call the assertion functions, like tassert, tassert_eq, tassert_exc, tassert_class, etc to check some conditions.</MParagraph>
            </MListItem>
            <MListItem>
              <MParagraph>if the assertion checking result will be recorded in the monitor.</MParagraph>
            </MListItem>
            <MListItem>
              <MParagraph>Generally, the whole testing function will be executed no matter whether the assertion checking succeeded or failed (this will be recorded, but does not affect the execution)</MParagraph>
            </MListItem>
            <MListItem>
              <MParagraph>In the following cases, the execution of the remaining part of the testing function will be stoped</MParagraph>
              <MList listtype='unordered'>
                <MListItem>
                  <MParagraph>a fatal assertion failure occurred</MParagraph>
                </MListItem>
                <MListItem>
                  <MParagraph>an unexpected exception occurred These cases will only stop the execution of the current testing function. The remaining functions in the test case will be run.</MParagraph>
                </MListItem>
              </MList>
            </MListItem>
          </MList>
        </MListItem>
        <MListItem>
          <MParagraph>info = run(tcase, logger) uses a logger to handle the testing events which happen during testing.</MParagraph>
        </MListItem>
      </MList>
    </MSection>
    <MSection name='history'>
      <MList listtype='unordered'>
        <MListItem>
          <MParagraph>Created by Dahua Lin, on Jun 29, 2007</MParagraph>
        </MListItem>
      </MList>
    </MSection>
  </MDoc>
</MFileInfo>
